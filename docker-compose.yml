version: "3"

services:
  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      - cluster.name=opensearch-cluster
      - discovery.type=single-node
      - plugins.security.disabled=true
      - node.name=opensearch
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
      interval: 10s
      retries: 80
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/
    ports:
      - 9200:9200
      - 9600:9600
    volumes:
      - './data/opensearch:/usr/share/opensearch/data'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:7.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    healthcheck:
      test: kafka-topics --bootstrap-server localhost:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://localhost:8081/subjects
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  attribute-dictionary-api:
    image: attribute-dictionary-api:latest
    ports:
      - 8080:8080
    depends_on:
      opensearch:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OPENSEARCH_URI=http://opensearch:9200
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=admin
      - KAFKA_BROKER=broker:9092
      - SCHEMA_REGISTRY_URI=http://schema-registry:8081
      - USER_PASSWORD=user
      - WRITER_PASSWORD=writer
      - ADMIN_PASSWORD=admin
      - EUREKA_SERVER=eureka
      - JAVA_OPTS=-Xms512M -Xmx512M

  attribute-dictionary-sync:
    image: attribute-dictionary-sync:latest
    depends_on:
      opensearch:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OPENSEARCH_URI=http://opensearch:9200
      - OPENSEARCH_USERNAME=admin
      - OPENSEARCH_PASSWORD=admin
      - KAFKA_BROKER=broker:9092
      - SCHEMA_REGISTRY_URI=http://schema-registry:8081
      - JAVA_OPTS=-Xms512M -Xmx512M

  dictionary-backend-api:
    image: dictionary-backend-api:latest
    ports:
      - 9080:9080
    depends_on:
      opensearch:
        condition: service_healthy
      broker:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DICTIONARY_API_URI=http://attribute-dictionary-api:8080
      - DICTIONARY_API_KEY=NONE
      - DICTIONARY_BASIC_AUTH_USERNAME=user
      - DICTIONARY_BASIC_AUTH_PASSWORD=user
      - RESOURCE_SERVER_URI=https://idpb2e-rec.adeo.com
      - RESOURCE_SERVER_JWK_URI=https://idpb2e-rec.adeo.com/ext/oauth/jwks
      - RESOURCE_SERVER_JWS_ALGORITHMS=RS512
      - EUREKA_SERVER=eureka
      - JAVA_OPTS=-Xms512M -Xmx512M

  eureka:
    image: eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - JAVA_OPTS=-Xms512M -Xmx512M

  gateway:
    image: gateway:latest
    ports:
      - "7070:7070"
    environment:
      - JAVA_OPTS=-Xms512M -Xmx512M
      - EUREKA_SERVER=eureka
      - DICTIONARY_API_URI=http://pro-attribute-dictionary-api
      - BACKEND_API_URI=http://pro-backend-api
      - SERVER_SSL_KEY_STORE=file:/keystore/edge-test.p12
      - SERVER_SSL_KEY_STORE_PASSWORD=testtest
    volumes:
      - $PWD/keystore:/keystore
