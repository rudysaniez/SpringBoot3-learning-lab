
logging:
  level:
    root: INFO

opensearch:
  uris: ${OPENSEARCH_URI}
  username: ${OPENSEARCH_USERNAME}
  password: ${OPENSEARCH_PASSWORD}

spring:
  jackson:
    deserialization:
      accept-single-value-as-array: true
    serialization:
      write-dates-as-timestamps: false
    generator:
      write-numbers-as-strings: false
    default-property-inclusion: NON_NULL
    date-format: yyyy-MM-dd'T'HH:mm:ssZ

  application:
    name: pro-attribute-dictionary-sync

  threads:
    virtual:
      enabled: false

  cloud:
    function:
      definition: attributeDictionarySyncEventConsume
    stream:
      default-binder: kafka

      bindings:
        attributeDictionarySyncEventConsume-in-0:
          destination: adeo-dev-europe-west1-APP-ARBOLPIM-BM-ES-P1-C1-BONSAI-DICTIONARY-ATTRIBUTE-SYNC
          group: svc-arbolpim-app-dev-BM-ES-SCS
          content-type: application/*+avro

          consumer:
            batch-mode: false
            partitioned: false
            max-attempts: 3
            back-off-initial-interval: 500
            back-off-max-interval: 1000
            back-off-multiplier: 2.0

      kafka:
        binder:
          brokers: ${KAFKA_BROKER}
          auto-create-topics: true
          auto-add-partitions: true
          configuration:
            '[request.timeout.ms]': 60000
            '[key.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            '[value.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            '[key.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[value.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[specific.avro.reader]': true
          consumer-properties:
            '[key.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[value.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[schema.registry.url]': ${SCHEMA_REGISTRY_URI}
            '[specific.avro.reader]': true
            '[max.poll.records]': 50
            '[fetch.max.wait.ms]': 400
            '[fetch.min.bytes]': 50000
          producer-properties:
            '[key.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            '[value.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            '[schema.registry.url]': ${SCHEMA_REGISTRY_URI}

spring.cloud.stream.kafka.bindings.attributeDictionarySyncEventConsume-in-0.consumer:
  enableDlq: true
  dlqName: adeo-dev-europe-west1-APP-ARBOLPIM-BM-ES-P1-C1-BONSAI-DICTIONARY-ATTRIBUTE-SYNC-CONSUMER-DLQ

service.version: v1

application:
  opensearch:
    indices:
      attributes-dictionary-name: attributes_dictionary_v1
